
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."Publications" (
    "title" character varying,
    "summary" character varying,
    "can_read" boolean,
    "publications_id" bigint NOT NULL
);

ALTER TABLE "public"."Publications" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."PublicationsTraveler" (
    "id" bigint NOT NULL,
    "publications_id" bigint NOT NULL,
    "travelers_id" bigint
);

ALTER TABLE "public"."PublicationsTraveler" OWNER TO "postgres";

ALTER TABLE "public"."PublicationsTraveler" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."PublicationsAuthor_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Ships" (
    "ship_date" "date",
    "ship_name" character varying DEFAULT ''::character varying,
    "id" bigint NOT NULL,
    "passenger_list" "jsonb"
);

ALTER TABLE "public"."Ships" OWNER TO "postgres";

ALTER TABLE "public"."Ships" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Ships_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Travelers" (
    "travelers_name" character varying,
    "travelers_type" character varying,
    "travelers_id" bigint NOT NULL
);

ALTER TABLE "public"."Travelers" OWNER TO "postgres";

ALTER TABLE ONLY "public"."PublicationsTraveler"
    ADD CONSTRAINT "PublicationsAuthor_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Publications"
    ADD CONSTRAINT "Publications_pkey" PRIMARY KEY ("publications_id");

ALTER TABLE ONLY "public"."Publications"
    ADD CONSTRAINT "Publications_publications_id_key" UNIQUE ("publications_id");

ALTER TABLE ONLY "public"."Ships"
    ADD CONSTRAINT "Ships_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."Ships"
    ADD CONSTRAINT "Ships_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Travelers"
    ADD CONSTRAINT "Travelers_pkey" PRIMARY KEY ("travelers_id");

ALTER TABLE ONLY "public"."Travelers"
    ADD CONSTRAINT "Travelers_travelers_id_key" UNIQUE ("travelers_id");

ALTER TABLE ONLY "public"."PublicationsTraveler"
    ADD CONSTRAINT "PublicationsTraveler_publications_id_fkey" FOREIGN KEY ("publications_id") REFERENCES "public"."Publications"("publications_id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."PublicationsTraveler"
    ADD CONSTRAINT "PublicationsTraveler_travelers_id_fkey" FOREIGN KEY ("travelers_id") REFERENCES "public"."Travelers"("travelers_id") ON DELETE CASCADE;

CREATE POLICY "Enable read access for all users" ON "public"."Publications" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."PublicationsTraveler" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."Ships" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."Travelers" FOR SELECT USING (true);

ALTER TABLE "public"."Publications" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."PublicationsTraveler" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Ships" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Travelers" ENABLE ROW LEVEL SECURITY;

REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."Publications" TO "anon";
GRANT ALL ON TABLE "public"."Publications" TO "authenticated";
GRANT ALL ON TABLE "public"."Publications" TO "service_role";

GRANT ALL ON TABLE "public"."PublicationsTraveler" TO "anon";
GRANT ALL ON TABLE "public"."PublicationsTraveler" TO "authenticated";
GRANT ALL ON TABLE "public"."PublicationsTraveler" TO "service_role";

GRANT ALL ON SEQUENCE "public"."PublicationsAuthor_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."PublicationsAuthor_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."PublicationsAuthor_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Ships" TO "anon";
GRANT ALL ON TABLE "public"."Ships" TO "authenticated";
GRANT ALL ON TABLE "public"."Ships" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Ships_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Ships_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Ships_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Travelers" TO "anon";
GRANT ALL ON TABLE "public"."Travelers" TO "authenticated";
GRANT ALL ON TABLE "public"."Travelers" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
